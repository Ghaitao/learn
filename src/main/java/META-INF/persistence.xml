<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
	<persistence-unit name="learn" transaction-type="RESOURCE_LOCAL">
		
		<!-- 配置使用什么ORM 产品来作为JPA的实现
			1.实际上配置的是org.hibernate.ejb.HibernatePersistence 接口的实现类
			2.若JPA项目中只有一个JPA的实现产品,则也可以不配置
		 -->
		 <provider>org.hibernate.ejb.HibernatePersistence</provider>
		 <!-- 添加持久化类 -->
		 <class>com.ght.learn.ffs.entity.sys.User</class>
		 
		 <!-- 
			配置二级缓存的策略 
			ALL：所有的实体类都被缓存
			NONE：所有的实体类都不被缓存. 
			ENABLE_SELECTIVE：标识 @Cacheable(true) 注解的实体类将被缓存
			DISABLE_SELECTIVE：缓存除标识 @Cacheable(false) 以外的所有实体类
			UNSPECIFIED：默认值，JPA 产品默认值将被使用
		-->
	<!-- 	<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode> -->

		<properties>
			<!-- 链接数据库的基本信息 -->
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql:///learn"/>
			<property name="javax.persistence.jdbc.user" value="root"/>
			<property name="javax.persistence.jdbc.password" value="root"/>
			
			<!-- 配置JPA 实现产品的基本属性,配置hibernate的基本属性 -->
			<property name="hibernate.format_sql" value="true"/>
			<property name="hibernate.show_sql" value="true"/>
			<property name="hibernate.hbm2ddl.auto" value="update"/>
			<!-- 二级缓存相关配置 -->
			<!-- 1.启动缓存 -->
			<!-- <property name="hibernate.cache.use_second_level_cache" value="true"/> -->
			<!-- 2.二级缓存的产品 -->
			<!-- <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/> -->
			<!-- 3.查询缓存 -->
			<!-- <property name="hibernate.cache.use_query_cache" value="true"/> -->
			
			
		</properties>
	</persistence-unit>
</persistence>
